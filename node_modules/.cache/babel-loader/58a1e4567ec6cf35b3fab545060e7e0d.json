{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dalekoff/dev/tzCodica/weather/src/components/mainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, Form } from 'react-bootstrap';\nconst API_KEY = \"886705b4c1182eb1c69f28eb8c520e20\";\n\nfunction MainPage() {\n  _s();\n\n  const [city, setCity] = useState('');\n\n  const saveCity = event => setCity(event.target.value);\n\n  const [main, setMain] = useState('');\n  const [name, setName] = useState('');\n  useEffect(() => {// localStorage.setItem()\n  });\n\n  const getData = async () => {\n    const wether = await wetherInf(city);\n    console.log(wether);\n    setMain(wether.main);\n    setName(wether.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '18prem'\n    },\n    className: \"card-body\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"city\",\n            placeholder: \"City\",\n            value: city,\n            onChange: saveCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-dark\",\n            onClick: getData,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Wether in city: \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"feels_like: \", main.feels_like]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"humidity: \", main.humidity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"pressure: \", main.pressure]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"temp: \", main.temp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"temp_max: \", main.temp_max]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"temp_min: \", main.temp_min]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MainPage, \"PoQUKQ9mK/oDxIKqOmUdeVpx97k=\");\n\n_c = MainPage;\n\nconst wetherInf = async city => {\n  const data = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n\n  if (!data.ok) {\n    console.error(\"Ошибка HTTP: \" + data.status);\n    return {};\n  }\n\n  const json = await data.json();\n  return json;\n};\n\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/home/dalekoff/dev/tzCodica/weather/src/components/mainPage.js"],"names":["React","useState","useEffect","Card","Button","Form","API_KEY","MainPage","city","setCity","saveCity","event","target","value","main","setMain","name","setName","getData","wether","wetherInf","console","log","width","feels_like","humidity","pressure","temp","temp_max","temp_min","data","fetch","ok","error","status","json"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Card, Button, Form, } from 'react-bootstrap'\n\nconst API_KEY = \"886705b4c1182eb1c69f28eb8c520e20\"\n\nfunction MainPage() {\n  const [city, setCity] = useState('');\n  const saveCity = (event) => setCity(event.target.value);\n\n  const [main, setMain] = useState('');\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    // localStorage.setItem()\n  })\n\n  const getData = async () => {\n    const wether = await wetherInf(city);\n      console.log(wether)\n      setMain(wether.main)\n        setName(wether.name)\n  }\n  \n  \n\n\n  return (\n  <Card style={{width: '18prem'}} className=\"card-body\">\n    <Card.Body>\n      <Card.Title>City</Card.Title>\n        <Form >\n          <Card.Text>\n            <Form.Control placeholder=\"City\"></Form.Control>\n            <input type=\"text\" name=\"city\" placeholder=\"City\" \n            value={city}  \n            onChange={saveCity}/>\n            <Button variant=\"outline-dark\" \n              onClick={getData}\n            >Submit</Button>\n          </Card.Text> \n            {/* <Button variant=\"primary\">Go< /Button> */}\n          <div>\n            <h1>Wether in city: {name}</h1>\n              <p>feels_like: {main.feels_like}</p>\n              <p>humidity: {main.humidity}</p>\n              <p>pressure: {main.pressure}</p>\n              <p>temp: {main.temp}</p>\n              <p>temp_max: {main.temp_max}</p>\n              <p>temp_min: {main.temp_min}</p>\n\n          </div>\n        </Form>\n    </Card.Body>\n  </Card>\n);\n}\n\n const wetherInf = async (city) => {\n  const data = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`)\n\nif (!data.ok) {\n  console.error(\"Ошибка HTTP: \" + data.status)\n  return {} \n} \n  const json = await data.json();\n\nreturn json\n}\n\n\n\nexport default MainPage"]},"metadata":{},"sourceType":"module"}